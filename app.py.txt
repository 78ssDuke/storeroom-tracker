from flask import Flask, render_template, request, redirect, url_for, session
import sqlite3

app = Flask(__name__)
app.secret_key = "CHANGE_THIS_SECRET"  # Change to random text for security

USERNAME = "admin"
PASSWORD = "password123"

def get_db_connection():
    conn = sqlite3.connect('storeroom.db')
    conn.row_factory = sqlite3.Row
    return conn

# Create table if not exists
conn = get_db_connection()
conn.execute("""
CREATE TABLE IF NOT EXISTS inventory (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    quantity INTEGER NOT NULL,
    location TEXT
)
""")
conn.commit()
conn.close()

# --- LOGIN ---
@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        username = request.form['username']
        password = request.form['password']
        if username == USERNAME and password == PASSWORD:
            session['logged_in'] = True
            return redirect(url_for('index'))
        else:
            return render_template('login.html', error="Invalid credentials")
    return render_template('login.html')

@app.route('/logout')
def logout():
    session.clear()
    return redirect(url_for('login'))

# --- MAIN PAGE ---
@app.route('/')
def index():
    if not session.get('logged_in'):
        return redirect(url_for('login'))
    conn = get_db_connection()
    items = conn.execute('SELECT * FROM inventory').fetchall()
    conn.close()
    return render_template('index.html', items=items)

@app.route('/add', methods=['POST'])
def add():
    if not session.get('logged_in'):
        return redirect(url_for('login'))
    name = request.form['name']
    quantity = request.form['quantity']
    location = request.form['location']
    if name and quantity.isdigit():
        conn = get_db_connection()
        conn.execute("INSERT INTO inventory (name, quantity, location) VALUES (?, ?, ?)",
                     (name, int(quantity), location))
        conn.commit()
        conn.close()
    return redirect('/')

@app.route('/delete/<int:item_id>')
def delete(item_id):
    if not session.get('logged_in'):
        return redirect(url_for('login'))
    conn = get_db_connection()
    conn.execute("DELETE FROM inventory WHERE id=?", (item_id,))
    conn.commit()
    conn.close()
    return redirect('/')

@app.route('/update/<int:item_id>', methods=['POST'])
def update(item_id):
    if not session.get('logged_in'):
        return redirect(url_for('login'))
    quantity = request.form['quantity']
    if quantity.isdigit():
        conn = get_db_connection()
        conn.execute("UPDATE inventory SET quantity=? WHERE id=?", (int(quantity), item_id))
        conn.commit()
        conn.close()
    return redirect('/')

if __name__ == '__main__':
    app.run(debug=True)